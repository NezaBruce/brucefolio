{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\BRUCE BIN\\\\Desktop\\\\New folder (2)\\\\myne\\\\frontend\\\\src\\\\container\\\\Skills\\\\Skills.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { motion } from \"framer-motion\";\nimport ReactTooltip from \"react-tooltip\";\nimport { AppWrap, MotionWrap } from \"../../Wrapper\";\nimport { urlFor, client } from \"../../client\";\nimport \"./Skills.scss\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Skills = () => {\n  _s();\n\n  const [experience, setExperience] = useState([]);\n  const [skills, setSkills] = useState([]);\n  useEffect(() => {\n    const query = '*[_type == \"skills\"]';\n    const skillsquery = '*[_type == \"experience\"]';\n    client.fetch(query).then(skill => {\n      setSkills(skill);\n    });\n    client.fetch(skillsquery).then(data => {\n      setExperience(data);\n    });\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"head-text\",\n      children: \"Skills & Experiences\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"skills-container\",\n      children: [/*#__PURE__*/_jsxDEV(motion.div, {\n        className: \"skills-list\",\n        children: skills.map(skill => /*#__PURE__*/_jsxDEV(motion.div, {\n          whileInView: {\n            opacity: [0, 1]\n          },\n          transition: {\n            duration: 0.5\n          },\n          className: \"skills-item flex\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex\",\n            style: {\n              backgroundColor: skill.bgColor\n            },\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: urlFor(skill.image),\n              alt: skill.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 38,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"p-text\",\n            children: skill.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 17\n          }, this)]\n        }, skill.name, true, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"skills-exp\",\n        children: experience.map(experience => /*#__PURE__*/_jsxDEV(motion.div, {\n          className: \"skills-exp-item flex\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"skills-exp-year\",\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"bold-text\",\n              children: experience.year\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(motion.div, {\n            className: \"skills-exp-works\",\n            children: experience.works.map(work => /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(motion.div, {\n                whileInView: {\n                  opacity: [0, 1]\n                },\n                transition: {\n                  duration: 0.5\n                },\n                className: \"skills-exp-work\",\n                \"data-tip\": true,\n                \"data-for\": work.name,\n                children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                  className: \"bold-text\",\n                  children: work.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 66,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"p-text\",\n                  children: work.company\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 67,\n                  columnNumber: 37\n                }, this)]\n              }, work.name, true, {\n                fileName: _jsxFileName,\n                lineNumber: 58,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(ReactTooltip, {\n                id: work.name,\n                effect: \"solid\",\n                arrowColor: \"#fff\",\n                className: \"skills-tooltip\",\n                children: work.desc\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 69,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 21\n          }, this)]\n        }, experience.year, true, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n}; // export default Skills;\n\n\n_s(Skills, \"PDxa8gCZPuvO2Oa7o1V+rdxieu0=\");\n\n_c = Skills;\nexport default _c3 = AppWrap(_c2 = MotionWrap(Skills, \"skills\"), \"skills\", \"whitebg\");\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"Skills\");\n$RefreshReg$(_c2, \"%default%$AppWrap\");\n$RefreshReg$(_c3, \"%default%\");","map":{"version":3,"sources":["C:/Users/BRUCE BIN/Desktop/New folder (2)/myne/frontend/src/container/Skills/Skills.js"],"names":["React","useState","useEffect","motion","ReactTooltip","AppWrap","MotionWrap","urlFor","client","Skills","experience","setExperience","skills","setSkills","query","skillsquery","fetch","then","skill","data","map","opacity","duration","backgroundColor","bgColor","image","name","year","works","work","company","desc"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { motion } from \"framer-motion\";\r\nimport ReactTooltip from \"react-tooltip\";\r\n\r\nimport { AppWrap, MotionWrap } from \"../../Wrapper\";\r\nimport { urlFor, client } from \"../../client\";\r\nimport \"./Skills.scss\";\r\n\r\nconst Skills = () => {\r\n    const [experience, setExperience] = useState([]);\r\n    const [skills, setSkills] = useState([]);\r\n    useEffect(() => {\r\n        const query = '*[_type == \"skills\"]';\r\n        const skillsquery = '*[_type == \"experience\"]';\r\n        client.fetch(query).then(skill => {\r\n            setSkills(skill);\r\n        });\r\n        client.fetch(skillsquery).then(data => {\r\n            setExperience(data);\r\n        });\r\n    })\r\n    return (\r\n      <>\r\n        <h2 className=\"head-text\">Skills & Experiences</h2>\r\n        <div className=\"skills-container\">\r\n          <motion.div className=\"skills-list\">\r\n            {skills.map((skill) => (\r\n              <motion.div\r\n                whileInView={{ opacity: [0, 1] }}\r\n                transition={{ duration: 0.5 }}\r\n                className=\"skills-item flex\"\r\n                key={skill.name}\r\n              >\r\n                <div\r\n                  className=\"flex\"\r\n                  style={{ backgroundColor: skill.bgColor }}\r\n                >\r\n                  <img src={urlFor(skill.image)} alt={skill.name} />\r\n                </div>\r\n                <p className=\"p-text\">{skill.name}</p>\r\n              </motion.div>\r\n            ))}\r\n          </motion.div>\r\n          <div className=\"skills-exp\">\r\n            {experience.map((experience) => (\r\n              <motion.div\r\n                className=\"skills-exp-item flex\"\r\n                key={experience.year}\r\n              >\r\n                <div\r\n                  className=\"skills-exp-year\"\r\n                    >\r\n                        <p className=\"bold-text\">{experience.year}</p>\r\n                    </div>\r\n                    <motion.div className='skills-exp-works'>\r\n                        {experience.works.map(work => (\r\n                            <>\r\n                                <motion.div\r\n                                    whileInView={{ opacity: [0, 1] }}\r\n                                    transition={{ duration: 0.5 }}\r\n                                    className='skills-exp-work'\r\n                                    data-tip\r\n                                    data-for={work.name}\r\n                                    key={work.name}\r\n                                >\r\n                                    <h4 className='bold-text'>{work.name}</h4>\r\n                                    <p className=\"p-text\">{work.company}</p>\r\n                                </motion.div>\r\n                                <ReactTooltip\r\n                                    id={work.name}\r\n                                    effect=\"solid\"\r\n                                    arrowColor=\"#fff\"\r\n                                    className=\"skills-tooltip\"\r\n                                >\r\n                                    {work.desc}\r\n                                </ReactTooltip>\r\n                            </>\r\n                        ))}\r\n   </motion.div>\r\n   </motion.div>\r\n))}\r\n</div>\r\n        </div>\r\n      </>\r\n    );\r\n};\r\n\r\n// export default Skills;\r\nexport default AppWrap(MotionWrap(Skills, \"skills\"), \"skills\", \"whitebg\");\r\n"]},"metadata":{},"sourceType":"module"}